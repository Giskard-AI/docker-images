name: Publish the images

on:
  push:
    branches:
      - main
    paths:
      - 'python/Dockerfile_*'
  workflow_dispatch:
permissions:
  contents: write

env:
  REGISTRY_IMAGE_PREFIX: "quay.io/giskard/"
jobs:
  build:
    strategy:
      matrix:
        version: ["3.12", "3.13"]
        platform: ['ubuntu-latest', 'runner-ubuntu24-arm64']
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: |
            ${{ env.REGISTRY_IMAGE_PREFIX }}python
          flavor: |
            latest=false
          tags: |
            type=raw,enable=true,value=${{ matrix.version }}-${{ matrix.platform }}

      - name: Login to Docker registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Push
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: ./python
          file: ./python/Dockerfile_${{ matrix.version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          builder: ${{ steps.builder.outputs.name }}
          push: true

          # For details, see link below
      # https://docs.docker.com/build/ci/github-actions/multi-platform/
      - name: Export digest
        run: |
          mkdir -p /tmp/digests/${{ matrix.version }}
          digest="${{ steps.push.outputs.digest }}"
          touch "/tmp/digests/${{ matrix.version }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: digests-${{ matrix.version }}-${{ matrix.platform }}
          path: /tmp/digests/${{ matrix.version }}/*
          if-no-files-found: error
          retention-days: 1

  merge:
    strategy:
      matrix:
        version: ["3.12", "3.13"]
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          pattern: digests-${{ matrix.version }}-*
          merge-multiple: true
          path: /tmp/digests/${{ matrix.version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          tags: |
            type=raw,value=${{ matrix.version }}
          images: |
            ${{ env.REGISTRY_IMAGE_PREFIX }}python
          flavor: |
            latest=false

      - name: Login to Docker registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests/${{ matrix.version }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE_PREFIX }}python@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE_PREFIX }}python:${{ steps.meta.outputs.version }}
